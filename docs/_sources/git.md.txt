# git

## リポジトリとリポジトリの依存関係を submodule で管理する。

```powershell
# GitHub上のリポジトリを消す。
#gh repo delete submodule-parent --confirm
#gh repo delete submodule-child --confirm

# 子リポジトリを作る。
gh repo create submodule-child --public
$ChildRepoUrl = $(gh repo view submodule-child --json sshUrl -q ".sshUrl")
git clone $ChildRepoUrl

# 子リポジトリにファイルを加える。
Set-Location submodule-child
New-Item child.txt
git add child.txt
git commit -m "fix"
git push

git log
  # commit f13673f55c71c3ce313435af54bb06274a9f6565 (HEAD -> main, origin/main)

Set-Location ..

# 親リポジトリを作る。
gh repo create submodule-parent --public
$ParentRepoUrl = $(gh repo view submodule-parent --json sshUrl -q ".sshUrl")
git clone $ParentRepoUrl

# 親リポジトリに子リポジトリを加える。
Set-Location submodule-parent
git submodule add $ChildRepoUrl

git status
  # Changes to be committed:
  #   (use "git rm --cached <file>..." to unstage)
  #         new file:   .gitmodules
  #         new file:   submodule-child
git diff --staged
  # diff --git a/.gitmodules b/.gitmodules
  # new file mode 100644
  # index 0000000..bd93a86
  # --- /dev/null
  # +++ b/.gitmodules
  # @@ -0,0 +1,3 @@
  # +[submodule "submodule-child"]
  # +       path = submodule-child
  # +       url = git@github.com:kumarstack55/submodule-child.git
  # diff --git a/submodule-child b/submodule-child
  # new file mode 160000
  # index 0000000..f13673f
  # --- /dev/null
  # +++ b/submodule-child
  # @@ -0,0 +1 @@
  # +Subproject commit f13673f55c71c3ce313435af54bb06274a9f6565

git commit -m "fix"
git submodule status
  # f13673f55c71c3ce313435af54bb06274a9f6565 submodule-child (heads/main)
git push

# 子リポジトリを更新する。
Set-Location ..\submodule-child\

New-Item child2.txt
git add child2.txt
git commit -m "fix"
git log
  # commit 50ef740e602beb2d96ca7d40ebb1101f52a7bf2c (HEAD -> main)
git push

# 親リポジトリ内の状態を確認する。
Set-Location ..\submodule-parent\

Get-ChildItem .\submodule-child\
  # --> child.txt が存在する。
  # --> child2.txt が存在しない。

git submodule update --remote
git status
  # Changes not staged for commit:
  #   (use "git add <file>..." to update what will be committed)
  #   (use "git restore <file>..." to discard changes in working directory)
  #         modified:   submodule-child (new commits)
git diff
  # diff --git a/submodule-child b/submodule-child
  # index f13673f..50ef740 160000
  # --- a/submodule-child
  # +++ b/submodule-child
  # @@ -1 +1 @@
  # -Subproject commit f13673f55c71c3ce313435af54bb06274a9f6565
  # +Subproject commit 50ef740e602beb2d96ca7d40ebb1101f52a7bf2c

Get-ChildItem .\submodule-child\
  # --> child.txt が存在する。
  # --> child2.txt が存在する。
```

## git submodule の機能一覧

```powershell
PS > git --version
git version 2.31.1.windows.1
PS > git submodule -h
usage: git submodule [--quiet] [--cached]
   or: git submodule [--quiet] add [-b <branch>] [-f|--force] [--name <name>] [--reference <repository>] [--] <repository> [<path>]
   or: git submodule [--quiet] status [--cached] [--recursive] [--] [<path>...]
   or: git submodule [--quiet] init [--] [<path>...]
   or: git submodule [--quiet] deinit [-f|--force] (--all| [--] <path>...)
   or: git submodule [--quiet] update [--init] [--remote] [-N|--no-fetch] [-f|--force] [--checkout|--merge|--rebase] [--[no-]recommend-shallow] [--reference <repository>] [--recursive] [--[no-]single-branch] [--] [<path>...]
   or: git submodule [--quiet] set-branch (--default|--branch <branch>) [--] <path>
   or: git submodule [--quiet] set-url [--] <path> <newurl>
   or: git submodule [--quiet] summary [--cached|--files] [--summary-limit <n>] [commit] [--] [<path>...]
   or: git submodule [--quiet] foreach [--recursive] <command>
   or: git submodule [--quiet] sync [--recursive] [--] [<path>...]
   or: git submodule [--quiet] absorbgitdirs [--] [<path>...]
```
